
services:
  # Main application service - SQLite (Development)
  democrasite:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - democrasite_db:/app/data
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=sqlite:///./data/democrasite.db
      - SECRET_KEY=${SECRET_KEY:-development-secret-key}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      - REQUIRE_EMAIL_VERIFICATION=false  # Development mode - no email verification
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL database service (Production)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: democrasite_db
      POSTGRES_USER: ${POSTGRES_USER:-democrasite_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-democrasite_pass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-democrasite_user} -d democrasite_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - postgres
    networks:
      - democrasite-network

  # Application with PostgreSQL (Production)
  democrasite-postgres:
    build: .
    ports:
      - "8001:8000"  # Use different external port to avoid conflict
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://${POSTGRES_USER:-democrasite_user}:${POSTGRES_PASSWORD:-democrasite_pass}@postgres:5432/democrasite_db
      - SECRET_KEY=${SECRET_KEY:-change-this-secret-key-in-production}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      - REQUIRE_EMAIL_VERIFICATION=true   # Production mode - email verification required
      # SMTP Configuration for email verification (set these in production)
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - FROM_EMAIL=${FROM_EMAIL:-noreply@democrasite.com}
      - FROM_NAME=${FROM_NAME:-Democrasite}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:8001}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    profiles:
      - postgres
    networks:
      - democrasite-network

  # Database population utility for SQLite
  populate-db:
    build: .
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=${DATABASE_URL:-sqlite:///./data/democrasite.db}
    volumes:
      # Only mount SQLite volume if using SQLite
      - democrasite_db:/app/data
    command: python3 populate_db.py
    profiles:
      - tools

  # PostgreSQL database population utility  
  populate-db-postgres:
    build: .
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://${POSTGRES_USER:-democrasite_user}:${POSTGRES_PASSWORD:-democrasite_pass}@postgres:5432/democrasite_db
    command: python3 populate_db.py
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - postgres
    networks:
      - democrasite-network

volumes:
  democrasite_db:   # SQLite data (development)
  postgres_data:    # PostgreSQL data (production)

networks:
  democrasite-network:
    driver: bridge